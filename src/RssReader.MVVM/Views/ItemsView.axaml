<UserControl x:Class="RssReader.MVVM.Views.ItemsView"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:svg="clr-namespace:Avalonia.Svg;assembly=Avalonia.Svg"
             xmlns:vm="using:RssReader.MVVM.ViewModels"
             xmlns:m="using:RssReader.MVVM.Models" 
             xmlns:c="using:RssReader.MVVM.Converters"  
             mc:Ignorable="d"
             x:DataType="vm:ItemsViewModel" x:CompileBindings="True">  
    
    <UserControl.Styles>
        <Style Selector="Button.main">
            <Setter Property="Padding" Value="2" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>            
        </Style>
        <Style Selector="TextBlock.IsRead">
            <Style.Setters>
                <Setter Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundDisabled}" />
            </Style.Setters>
        </Style>    
        <Style Selector="TextBlock.NotRead">
            <Style.Setters>
                <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundPointerOver}" />
            </Style.Setters>
        </Style>  
        <Style Selector="Image.IsProp">
            <Setter Property="Margin" Value="0,0,2,0" />
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>            
        </Style>               
    </UserControl.Styles>                           
    
    <Grid RowDefinitions="Auto,Auto,*" HorizontalAlignment="Stretch">
        <Grid Grid.Row="0" Margin="5" ColumnDefinitions="Auto,*,Auto,Auto">
            <Button Grid.Column="0" Width="32" Height="32" Command="{Binding PaneCommand}" ToolTip.Tip="Hide/Pin sidebar">
                <PathIcon Height="11" Data="{StaticResource LineHorizontal3Regular}" />
            </Button> 
            <TextBox Height="32" Margin="5,0,0,0" Grid.Column="1" HorizontalAlignment="Stretch" Text="{Binding SearchText}" ToolTip.Tip="Search in this feed" />  
            <Button Margin="5,0,0,0" Grid.Column="2" ToolTip.Tip="Mark as read" Command="{Binding MarkAsReadCommand}"
                    Classes="main" Content="{SvgImage /Assets/accept-check-good-mark-ok-tick-svgrepo-com.svg}" />                       
            <Button Width="32" Height="32" Margin="5,0,0,0" Grid.Column="3" ToolTip.Tip="Refresh" Command="{Binding RefreshCommand}"
                    Classes="main" Content="{SvgImage /Assets/refresh-reload-update-svgrepo-com.svg}" />                            
        </Grid>
        
        <StackPanel Grid.Row="1" Margin="5" Orientation="Horizontal">
            <Image Margin="0 0 4 0" VerticalAlignment="Center" Width="24" Height="24" Source="{Binding ImageSource}" />
            <TextBlock FontSize="18" FontWeight="Bold" Text="{Binding Title}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
        </StackPanel>   
        
        <ListBox Grid.Row="2" Margin="5" ItemsSource="{Binding Items}" Background="Transparent"
                 SelectedItem="{Binding SelectedChannelItem, Mode=TwoWay}"> 
            
            <ListBox.Styles>
                <Style Selector="ListBoxItem">
                    <Setter Property="Padding" Value="2"/>
                </Style>
            </ListBox.Styles>                                    
            
            <ListBox.ItemTemplate>
                <DataTemplate DataType="m:ChannelItemModel">                            
                    <Border BorderBrush="{DynamicResource SystemBaseLowColor}"
                            BorderThickness="1" CornerRadius="3" Margin="0,0,5,0"> 
                        <StackPanel Margin="5" HorizontalAlignment="Stretch">
                            <Panel>
                                <TextBlock Text="{Binding PublishingDate}" FontStyle="Italic" 
                                           Classes.IsRead="{Binding IsRead}" Classes.NotRead="{Binding !IsRead}" />
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Image Classes="IsProp" IsVisible="{Binding IsRead}" Source="{SvgImage /Assets/accept-check-good-mark-ok-yellow-svgrepo-com.svg}"/>
                                    <Image Classes="IsProp" IsVisible="{Binding !IsRead}" Source="{SvgImage /Assets/accept-check-good-mark-ok-tick-svgrepo-com.svg}"/>                                
                                    <Image Classes="IsProp" IsVisible="{Binding IsFavorite}" Source="{SvgImage /Assets/bookmark-favorite-rating-star-svgrepo-com.svg}"/>
                                    <Image Classes="IsProp" IsVisible="{Binding !IsFavorite}" Source="{SvgImage /Assets/favorite-no-rating-star-svgrepo-com.svg}"/>                                    
                                    <Image Classes="IsProp" IsVisible="{Binding IsReadLater}" Source="{SvgImage /Assets/flag-location-map-marker-pin-pointer-svgrepo-com.svg}"/>
                                    <Image Classes="IsProp" IsVisible="{Binding !IsReadLater}" Source="{SvgImage /Assets/flag-location-map-yellow-pin-pointer-svgrepo-com.svg}"/>                                    
                                </StackPanel>
                            </Panel>
                            <StackPanel Orientation="Horizontal">
                                <Image Margin="0 0 4 0" VerticalAlignment="Center" Width="16" Height="16" Source="{Binding ImageSource}" />
                                <TextBlock Text="{Binding ChannelTitle}" HorizontalAlignment="Stretch" TextWrapping="Wrap" FontStyle="Italic" 
                                           Classes.IsRead="{Binding IsRead}" Classes.NotRead="{Binding !IsRead}"/>
                            </StackPanel>
                            <TextBlock Text="{Binding Title}" FontWeight="Bold" TextWrapping="Wrap" HorizontalAlignment="Stretch"
                                       Classes.IsRead="{Binding IsRead}" Classes.NotRead="{Binding !IsRead}"/>
                            <TextBlock Text="{Binding ShortDescription}" TextWrapping="Wrap" HorizontalAlignment="Stretch" 
                                       Classes.IsRead="{Binding IsRead}" Classes.NotRead="{Binding !IsRead}"/>
                        </StackPanel>
                    </Border>                            
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>         
    </Grid>
    
    
    
</UserControl>             
